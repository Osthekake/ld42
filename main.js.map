{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/resources.ts","webpack:///./src/actors/goal.ts","webpack:///./src/actors/ui/startbutton.ts","webpack:///./src/util/util.ts","webpack:///./src/actors/thruster.ts","webpack:///./src/actors/furniture.ts","webpack:///./src/images/goal.png","webpack:///./src/images/background.png","webpack:///./src/images/radial_thruster.png","webpack:///./src/images/small_thruster.png","webpack:///./src/images/brick_tile.png","webpack:///./src/images/wood_tile.png","webpack:///./src/images/lamp.png","webpack:///./src/images/sofa.png","webpack:///./src/images/tv.png","webpack:///./src/images/rocket.png","webpack:///./src/images/arrow2.png","webpack:///./src/images/arrow.png","webpack:///./src/images/panel.png","webpack:///./src/images/button.png","webpack:///./src/images/speech.png","webpack:///./src/images/sword.png","webpack:///./src/actors/tile.ts","webpack:///./src/levels/level.ts","webpack:///./src/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","p","jsonpArray","window","webpackJsonp","oldJsonpFunction","bind","slice","ex","Textures","Sword","Texture","SpeechBubble","Button","Panel","ArrowRight","ArrowLeft","Rocket","TV","Sofa","Lamp","WoodTile","BrickTile","SmallThruster","RadialThruster","Background","Goal","Levels","Level1","Level2","Level3","Level4","Level5","t","e","this","__extends","setPrototypeOf","__proto__","Array","constructor","create","resources_1","_super","x","y","scale","_this","collisionType","CollisionType","Passive","tex","addDrawing","addCollisionGroup","setWidth","width","setHeight","height","onInitialize","engine","on","event","other","inGoal","Actor","excalibur_1","StartButton","level","isRunning","isReset","label","Label","text","fontFamily","fontSize","textAlign","TextAlign","Center","color","Color","Orange","add","onClick","stop","start","reset","reinitializeFurniture","UIActor","vectorDifference","a","b","dX","dY","Vector","util_1","Thruster","texture","attachment","thrust","isDragging","Active","emitterOffset","updateAttachment","placement","pos","clone","rotation","toAngle","Math","PI","animation","SpriteSheet","getAnimationForAll","flipVertical","enableCapturePointer","emitter","ParticleEmitter","emitterType","EmitterType","Circle","radius","minVel","maxVel","minAngle","maxAngle","emitRate","opacity","fadeFlag","particleLife","maxSize","minSize","beginColor","fromRGB","endColor","isEmitting","angularAbs","angle","totalAngle","parent","getThrust","rotate","getTorque","sin","magnitude","update","delta","offset","vel","input","pointers","primary","center","lastPagePos","getWidth","getHeight","attachmentVector","normalize","Furniture","gravity","thrusters","isInGoal","friction","mass","onPostUpdate","torque","acc","Zero","forEach","thruster","addThruster","child","setTimeout","kill","console","log","Tile","tileSet","DarkGray","Fixed","spriteSheet","topLeft","getSprite","topMiddle","topRight","middleLeft","middle","middleRight","bottomLeft","bottomMiddle","bottomRight","u","draw","ctx","startX","startY","endX","endY","tile_1","furniture_1","thruster_1","startbutton_1","goal_1","Level","levelData","tiles","furniture","canvasWidth","canvasHeight","background","PreventCollision","walls","wall","tile","loadFurniture","startButton","goal","onActivate","onDeactivate","furnitureItem","boosters","boost","remove","endTimer","element","every","f","goToScene","next","Scene","level_1","Game","displayMode","DisplayMode","key","loader","Engine","Physics","useRigidBodyPhysics","game","Loader","addResource","then"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([30,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as ex from 'excalibur';\nimport { LevelData } from './levels/level';\n\nexport const Textures = {\n    Sword: new ex.Texture(require('./images/sword.png')),\n    SpeechBubble: new ex.Texture(require('./images/speech.png')),\n    Button: new ex.Texture(require('./images/button.png')),\n    Panel: new ex.Texture(require('./images/panel.png')),\n    ArrowRight: new ex.Texture(require('./images/arrow.png')),\n    ArrowLeft: new ex.Texture(require('./images/arrow2.png')),\n    Rocket: new ex.Texture(require('./images/rocket.png')),\n    TV: new ex.Texture(require('./images/tv.png')),\n    Sofa: new ex.Texture(require('./images/sofa.png')),\n    Lamp: new ex.Texture(require('./images/lamp.png')),\n    WoodTile: new ex.Texture(require('./images/wood_tile.png')),\n    BrickTile: new ex.Texture(require('./images/brick_tile.png')),\n    SmallThruster: new ex.Texture(require('./images/small_thruster.png')),\n    RadialThruster: new ex.Texture(require('./images/radial_thruster.png')),\n    Background:  new ex.Texture(require('./images/background.png')),\n    Goal:  new ex.Texture(require('./images/goal.png')),\n}\n\nexport const Levels:  {[key: string]: LevelData} = {\n    Level1: require('./levels/level1.json'),\n    Level2: require('./levels/level2.json'),\n    Level3: require('./levels/level3.json'),\n    Level4: require('./levels/level4.json'),\n    Level5: require('./levels/level5.json'),\n}\n\n","import * as ex from 'excalibur';\r\nimport { Textures } from '../resources';\r\n\r\nexport class Goal extends ex.Actor {\r\n    constructor(x: number, y: number, scale: ex.Vector) {\r\n        super({\r\n            x, y, scale,\r\n            collisionType: ex.CollisionType.Passive,\r\n        });\r\n        const tex = Textures.Goal;\r\n        this.addDrawing(tex);\r\n        this.addCollisionGroup('furniture');\r\n        this.setWidth(tex.width/2);\r\n        this.setHeight(tex.height/2);\r\n    }\r\n\r\n    onInitialize(engine: ex.Engine) {\r\n        this.on('collisionstart', (event: ex.CollisionStartEvent) => {\r\n            const other = event.other as any;\r\n            if (other.inGoal) {\r\n                other.inGoal();\r\n            }\r\n        });\r\n    }\r\n}","import * as ex from 'excalibur';\r\nimport { UIActor } from 'excalibur';\r\nimport { Level } from '../../levels/level';\r\nimport { Startable } from '../startable';\r\nimport { Textures } from '../../resources';\r\n\r\nexport class StartButton extends UIActor implements Startable{\r\n  isRunning: boolean = false;\r\n  isReset: boolean = true;\r\n  label: ex.Label;\r\n    \r\n  constructor(private level: Level){\r\n    super({\r\n      x: 1025,\r\n      y: 625,\r\n    });\r\n    const tex = Textures.Button;\r\n    this.addDrawing(tex);\r\n    this.setWidth(tex.width);\r\n    this.setHeight(tex.height);\r\n        \r\n    this.label = new ex.Label({\r\n      x: tex.width/2,\r\n      y: tex.height * 0.55,\r\n      text: 'Ignition!',\r\n      fontFamily: 'Arial',\r\n      fontSize: 20,\r\n      textAlign: ex.TextAlign.Center,\r\n      color: ex.Color.Orange\r\n    });\r\n    this.add(this.label);\r\n\r\n    this.on('pointerdown', this.onClick);\r\n  }\r\n\r\n  onClick(e: ex.Input.PointerEvent){\r\n    if (this.isRunning) {\r\n      this.stop();\r\n    } else {\r\n        if (this.isReset){\r\n            this.start();\r\n        } else {\r\n            this.reset();\r\n        }\r\n    }\r\n  }\r\n\r\n  start(): void {\r\n    this.isRunning = true;\r\n    this.isReset = false;\r\n    this.label.text = 'Cut engines';\r\n    this.level.start();\r\n  }\r\n\r\n  stop(): void {\r\n    this.isRunning = false;\r\n    this.label.text = 'Reset level';\r\n    this.level.stop();\r\n  }\r\n\r\n  reset(){\r\n      this.isReset = true;\r\n    this.label.text = 'Ignition!';\r\n    this.level.reinitializeFurniture();\r\n  }\r\n}","import { Vector } from \"excalibur\";\r\n\r\nexport function vectorDifference(a: Vector, b: Vector): Vector {\r\n    const dX = a.x - b.x;\r\n    const dY = a.y - b.y;\r\n    return new Vector(dX, dY);\r\n}","import * as ex from 'excalibur';\nimport { Vector, SpriteSheet } from 'excalibur';\nimport { vectorDifference } from '../util/util';\nimport { Startable } from './startable';\n\nexport type Attachment = 'linear' | 'radial_clockwise' | 'radial_counterClockwise';\nconst MAX_ATTACHMENT_RADIUS = 70;\n\nexport class Thruster extends ex.Actor implements Startable {\n\n  private emitter: ex.ParticleEmitter;\n  readonly emitterOffset;\n  readonly thrust = new Vector(-150, 0);\n\n  public isRunning: boolean = false;\n  private isDragging: boolean = false;\n\n  constructor(private texture: ex.Texture, private attachment: Attachment = 'linear') {\n    super(50, 0, texture.width, texture.height);\n    \n    this.collisionType = ex.CollisionType.Active;\n    \n    switch (this.attachment) {\n      case 'linear': {\n        this.emitterOffset = new Vector(10, 0);\n        break;\n      }\n      case 'radial_clockwise': {\n        this.emitterOffset = new Vector(25, -5);\n        break;\n      }\n      case 'radial_counterClockwise': {\n        this.emitterOffset = new Vector(25, 5);\n        break;\n      }\n    }\n  }\n\n  updateAttachment(placement: Vector) {\n    this.pos = placement.clone();\n    switch (this.attachment) {\n      case 'linear': {\n        this.rotation = this.pos.toAngle();\n        break;\n      }\n      case 'radial_clockwise': {\n        this.rotation = this.pos.toAngle() + Math.PI/2;\n        break;\n      }\n      case 'radial_counterClockwise': {\n        this.rotation = this.pos.toAngle() - Math.PI/2;\n        break;\n      }\n    }\n    // console.log('placement radius', placement.magnitude());\n  }\n\n  onInitialize(engine: ex.Engine) {\n    const spriteSheet = new SpriteSheet(this.texture, 1, 1, this.texture.width, this.texture.height);\n    const animation = spriteSheet.getAnimationForAll(engine, 125);\n    \n    this.addDrawing('idle', animation);\n    //animation.flipHorizontal = this.attachment === 'radial_counterClockwise';\n    animation.flipVertical = this.attachment === 'radial_counterClockwise';\n\n    this.enableCapturePointer = true;\n    this.on('pointerdown', () => this.isDragging = true);\n    this.on('pointerdragend', () => this.isDragging = false);\n\n    this.emitter = new ex.ParticleEmitter({\n      emitterType: ex.EmitterType.Circle, // Shape of emitter nozzle\n      radius: 5,\n      minVel: 100,\n      maxVel: 400,\n      minAngle: 0.3 * Math.PI,\n      maxAngle: 0.7 * Math.PI,\n      emitRate: 300, // 300 particles/second\n      opacity: 0.5,\n      fadeFlag: true, // fade particles overtime\n      particleLife: 1000, // in milliseconds = 1 sec\n      maxSize: 10, // in pixels\n      minSize: 1,\n      beginColor: ex.Color.fromRGB(255, 100, 50),\n      endColor: ex.Color.fromRGB(240, 240, 0)\n    });\n\n    // set emitter settings\n    this.emitter.isEmitting = false;  // should the emitter be emitting\n    // add the emitter as a child actor, it will draw on top of the parent actor\n    // and move with the parent\n    engine.add(this.emitter);\n  }\n\n  private angularAbs(angle: number): number {\n    while (angle < 0) {\n      angle += Math.PI * 2;\n    }\n    while (angle > Math.PI * 2) {\n      angle -= Math.PI * 2;\n    }\n    return angle;\n  }\n\n  public start(){\n    this.isRunning = true;\n    this.emitter.isEmitting = true;\n  }\n\n  public stop() {\n    this.isRunning = false;\n    this.emitter.isEmitting = false;\n  }\n\n  totalAngle(): number {\n    return this.rotation + this.parent.rotation;\n  }\n\n  public getThrust(): Vector {\n    return this.thrust.clone().rotate(this.totalAngle());\n  }\n\n  public getTorque(): number {\n    switch (this.attachment) {\n      case 'linear': {\n        return Math.sin(this.totalAngle()) * 100;\n      }\n      case 'radial_clockwise': {\n        return this.getThrust().magnitude() * this.pos.magnitude() * -1;\n      }\n      case 'radial_counterClockwise': {\n        return this.getThrust().magnitude() * this.pos.magnitude();\n      }\n    }\n    \n  }\n\n  public update(engine: ex.Engine, delta: number) {\n    super.update(engine, delta);\n   // console.log(this.isDragging);\n    \n    if (this.isRunning) {\n      // todo: apply thrust to parent\n      //this.acc = this.thrust.clone().rotate(this.rotation);\n      //this.parent.acc.add(this.thrust.clone().rotate(this.rotation));\n  \n      // keep emitter pointing correctly\n      const offset = this.emitterOffset.rotate(this.rotation).add(this.pos).rotate(this.parent.rotation);\n      this.emitter.pos = this.parent.pos.clone().add(offset);\n      this.emitter.rotation = this.totalAngle();\n      this.emitter.minAngle = this.emitter.rotation - 0.2;\n      this.emitter.maxAngle = this.emitter.rotation + 0.2;\n      this.emitter.vel = this.vel;\n    } else if (this.isDragging){\n      if (engine.input.pointers.primary.isDragging) {\n        const mouse = engine.input.pointers.primary.lastPagePos;\n        const center = mouse.add(new Vector(this.getWidth()/-2, this.getHeight()/-2));\n        let attachmentVector = vectorDifference(center, this.parent.pos);\n        if (attachmentVector.magnitude() > MAX_ATTACHMENT_RADIUS) {\n          attachmentVector = attachmentVector.normalize().scale(MAX_ATTACHMENT_RADIUS);\n        }\n        this.updateAttachment(attachmentVector);\n      } else {\n        this.isDragging = false;\n      }\n    }\n  }\n}\n","import * as ex from 'excalibur';\nimport { Vector } from 'excalibur';\nimport { Startable } from './startable';\nimport { Thruster } from './thruster';\n\nexport class Furniture extends ex.Actor implements Startable {\n  isRunning: boolean;\n \n  readonly gravity = new Vector(0, 80);\n  thrusters: Thruster[] = [];\n  isInGoal: boolean = false;\n  \n  constructor(x: number, y: number, texture: ex.Texture) {\n    super(x, y, texture.width * 0.8, texture.height * 0.8);\n    this.addDrawing(texture);\n    this.collisionType = ex.CollisionType.Active;\n  }\n\n  onInitialize(engine: ex.Engine) {\n    this.color = new ex.Color(255, 255, 255);\n    this.friction = 1;\n    this.mass = 1;\n    this.enableCapturePointer = false;\n    this.addCollisionGroup('furniture');\n    this.addCollisionGroup('walls');\n  }\n  \n  onPostUpdate(engine: ex.Engine, delta: number) {\n    super.onPostUpdate(engine, delta);\n    this.torque = 0;\n    this.acc = Vector.Zero;\n  }\n\n  public update(engine: ex.Engine, delta: number) {\n    super.update(engine, delta);\n    this.acc = this.gravity.clone();\n    if (this.isRunning) {\n      this.thrusters.forEach(thruster => {\n        this.acc = this.acc.add(thruster.getThrust());\n        this.torque += thruster.getTorque();\n      });\n      //console.log(this.acc, this.torque);\n    }\n  }\n  \n  addThruster(thruster: Thruster){\n    this.add(thruster);\n    this.thrusters.push(thruster);\n  }\n\n  start(): void {\n    this.isRunning = true;\n    this.thrusters.forEach((child:any) => {\n      child.start()\n    });\n    this.isInGoal = false;\n  }\n  stop(): void {\n    this.isRunning = false;\n    this.thrusters.forEach((child:any) => {\n      child.stop()\n    });\n  }\n\n  inGoal(){\n    if (!this.isInGoal) {\n      this.isInGoal = true;\n      setTimeout(() => {\n        this.stop();\n        this.kill();\n        console.log('gone')\n      }, 1000);\n      console.log('in goal!')\n    }\n  }\n}\n","module.exports = __webpack_public_path__ + \"c7f1e54ea98d593cadf6029fc7cb97eb.png\";","module.exports = __webpack_public_path__ + \"34cd666ca694089b9f395b3aaf8f4a97.png\";","module.exports = __webpack_public_path__ + \"b40f9ed65d85846c635606d82eba9fc5.png\";","module.exports = __webpack_public_path__ + \"9e0101f93b00123d7827621590de6015.png\";","module.exports = __webpack_public_path__ + \"06608a725ce9ebc2887b58f1414c0316.png\";","module.exports = __webpack_public_path__ + \"cb46cb082cd78ed7b0fbfa505c7e1f8c.png\";","module.exports = __webpack_public_path__ + \"f9ab6fe1ec0e33eb363098eba1a84b54.png\";","module.exports = __webpack_public_path__ + \"9806376f3a930e97ad533761548d452c.png\";","module.exports = __webpack_public_path__ + \"bf34c1237c916cd80b5c32c7c293c416.png\";","module.exports = __webpack_public_path__ + \"cdf03495cb0cdd6a36afb16dc4e48501.png\";","module.exports = __webpack_public_path__ + \"fb7505dcfc9d54fd52b0844e6da988ec.png\";","module.exports = __webpack_public_path__ + \"2385186871491075e0762c210949c9eb.png\";","module.exports = __webpack_public_path__ + \"1e9685280b55383803c4817ab517672e.png\";","module.exports = __webpack_public_path__ + \"3ea5e186b643048c752aaa1edd750eb3.png\";","module.exports = __webpack_public_path__ + \"76fe2fe86a2023c6feb474400b68b94a.png\";","module.exports = __webpack_public_path__ + \"94754f62e0ae4d23d386e246f5e0cb6e.png\";","import * as ex from 'excalibur';\r\nimport { Color, Engine, SpriteSheet } from 'excalibur';\r\nimport { Textures } from '../resources';\r\n\r\nexport class Tile extends ex.Actor {\r\n\r\n    topLeft: ex.Sprite;\r\n    topMiddle: ex.Sprite;\r\n    topRight: ex.Sprite;\r\n    middleLeft: ex.Sprite;\r\n    middle: ex.Sprite;\r\n    middleRight: ex.Sprite;\r\n    bottomLeft: ex.Sprite;\r\n    bottomMiddle: ex.Sprite;\r\n    bottomRight: ex.Sprite;\r\n\r\n    constructor(x, y, private width, private height, private tileSet: ex.Texture) {\r\n        super(x, y, width, height, Color.DarkGray);\r\n\r\n        this.friction = 1;\r\n        this.collisionType = ex.CollisionType.Fixed;\r\n        const spriteSheet = new SpriteSheet(this.tileSet, 3, 3, 50, 50);\r\n        this.topLeft = spriteSheet.getSprite(0);\r\n        this.topMiddle = spriteSheet.getSprite(1);\r\n        this.topRight = spriteSheet.getSprite(2);\r\n\r\n        this.middleLeft = spriteSheet.getSprite(3);\r\n        this.middle = spriteSheet.getSprite(4);\r\n        this.middleRight = spriteSheet.getSprite(5);\r\n        \r\n        this.bottomLeft = spriteSheet.getSprite(6);\r\n        this.bottomMiddle = spriteSheet.getSprite(7);\r\n        this.bottomRight = spriteSheet.getSprite(8);\r\n\r\n        this.addCollisionGroup('walls');\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, delta: number){\r\n        const startX = this.pos.x + this.getWidth()/-2;\r\n        const startY = this.pos.y + this.getHeight()/-2;\r\n        const endX = this.pos.x + this.getWidth()/2;\r\n        const endY = this.pos.y + this.getHeight()/2;\r\n        for (let x = startX; x < endX; x += 50) {\r\n            for (let y = startY; y < endY; y += 50) {\r\n                let sprite: ex.Sprite;\r\n                if (y === startY) {\r\n                    if (x === startX) {\r\n                        sprite = this.topLeft;\r\n                    } else if (x >= endX-50) {\r\n                        sprite = this.topRight;\r\n                    } else {\r\n                        sprite = this.topMiddle;\r\n                    }\r\n                } else if (y >= endY-50) {\r\n                    if (x === startX) {\r\n                        sprite = this.bottomLeft;\r\n                    } else if (x >= endX-50) {\r\n                        sprite = this.bottomRight;\r\n                    } else {\r\n                        sprite = this.bottomMiddle;\r\n                    }\r\n                } else {\r\n                    if (x === startX) {\r\n                        sprite = this.middleLeft;\r\n                    } else if (x >= endX-50) {\r\n                        sprite = this.middleRight;\r\n                    } else {\r\n                        sprite = this.middle;\r\n                    }\r\n                }\r\n                sprite.draw(ctx, x, y);\r\n            }\r\n        }\r\n    }\r\n}","import * as ex from 'excalibur';\nimport { Color, Actor, Vector, Timer } from 'excalibur';\nimport { Tile } from '../actors/tile';\nimport { Textures } from '../resources';\nimport { Furniture } from '../actors/furniture';\nimport { Thruster, Attachment } from '../actors/thruster';\nimport { StartButton } from '../actors/ui/startbutton';\nimport { Startable } from '../actors/startable';\nimport { Goal } from '../actors/goal';\n\nexport interface LevelData{\n  walls: {\n    tile: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  }[];\n\n  furniture?: {\n    texture: string;\n    x: number;\n    y: number;\n    boosters: {\n      texture: string;\n      attachment: Attachment;\n      offset?: number;\n    }[];\n  }[];\n  \n  goal: {\n    x: number;\n    y: number;\n    scale: number;\n  }\n\n  next: string;\n}\n\nexport class Level extends ex.Scene implements Startable{\n  isRunning: boolean = false;\n\n  private tiles: Tile[] = [];\n  private furniture: Furniture[] = [];\n  private goal: Goal;\n  private startButton: StartButton;\n\n  constructor(public levelData: LevelData) {\n    super();\n  }\n  \n  public onInitialize(engine: ex.Engine) {\n    const width = engine.canvasWidth;\n    const height = engine.canvasHeight;\n    \n    const background = new Actor({\n      x: width/2,\n      y: height/2,\n      collisionType: ex.CollisionType.PreventCollision\n    });\n    background.addDrawing(Textures.Background);\n    this.add(background);\n\n    // dynamic objects\n    this.levelData.walls.forEach(wall => {\n      const t = new Tile(wall.x*50, wall.y*50, wall.width*50, wall.height*50, Textures[wall.tile]);\n      this.tiles.push(t);\n      this.add(t);\n    });\n\n    this.loadFurniture();\n\n    // UI\n    this.startButton = new StartButton(this);\n    this.add(this.startButton);\n    this.goal = new Goal(this.levelData.goal.x*50, this.levelData.goal.y*50, new Vector(this.levelData.goal.scale, this.levelData.goal.scale));\n    this.add(this.goal);\n  }\n\n  public onActivate() {\n    this.reinitializeFurniture();\n    this.isRunning = false;\n    this.startButton.isReset = true;\n    this.startButton.isRunning = false;\n  }\n\n  public onDeactivate() {\n    this.isRunning = false;\n    this.startButton.reset();\n  }\n\n  loadFurniture(){\n    this.levelData.furniture.forEach(furnitureItem => {\n      const t = new Furniture(furnitureItem.x*50, furnitureItem.y*50, Textures[furnitureItem.texture]);\n      this.furniture.push(t);\n      furnitureItem.boosters.forEach(boost => {\n        const thruster = new Thruster(Textures[boost.texture], boost.attachment);\n        if (boost.offset) {\n          thruster.rotation = boost.offset;\n          thruster.pos = thruster.pos.rotate(boost.offset);\n        }\n        t.addThruster(thruster);\n      });\n      this.add(t);\n    });\n  }\n\n  reinitializeFurniture(){\n    this.furniture.forEach((furnitureItem) => {\n      this.remove(furnitureItem);\n      furnitureItem.kill();\n    });\n    this.furniture = [];\n    this.loadFurniture();\n    this.endTimer = undefined;\n  }\n  \n  start(): void {\n    this.furniture.forEach(element => element.start()); \n    this.isRunning = true;\n  }\n\n  stop(): void {\n    this.furniture.forEach(element => element.stop());\n    this.isRunning = false; \n  }\n\n  private endTimer: Timer;\n\n  update(engine, delta){\n    super.update(engine, delta)\n    if (!this.endTimer && this.furniture.every(f => f.isInGoal)){\n      console.log('level complete');\n      setTimeout(() => {\n        console.log('next level');\n        engine.goToScene(this.levelData.next);\n      }, 1500);\n    }\n  }\n}\n","import * as ex from 'excalibur';\nimport { Level } from './levels/level';\nimport { Textures, Levels } from './resources';\nimport { Physics, CollisionResolutionStrategy } from 'excalibur';\n\nclass Game extends ex.Engine {\n  constructor() {\n    super({ width: 1200, height: 800, displayMode: ex.DisplayMode.Fixed });\n    for (let key in Levels) {\n      let value = Levels[key];\n      const level = new Level(value);\n      this.add(key, level);\n    }\n  }\n  \n  public start(loader: ex.Loader) {\n    return super.start(loader);\n  }\n}\n\nPhysics.useRigidBodyPhysics();/*\nPhysics.collisionResolutionStrategy = CollisionResolutionStrategy.RigidBody;\nPhysics.enabled = true;\nPhysics.allowRigidBodyRotation = true;*/\nconst game = new Game();\n\nlet loader = new ex.Loader();\nfor (let key in Textures) {\n  loader.addResource(Textures[key]);\n}\n\ngame.start(loader).then(() => {\n  game.goToScene('Level5');\n  \n});"],"sourceRoot":""}