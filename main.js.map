{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/resources.ts","webpack:///./src/levels/level.ts","webpack:///./src/actors/speechbubble.ts","webpack:///./src/index.ts","webpack:///./src/actors/tile.ts","webpack:///./src/images/sword.png","webpack:///./src/images/speech.png","webpack:///./src/images/button.png","webpack:///./src/images/panel.png","webpack:///./src/images/arrow.png","webpack:///./src/images/arrow2.png","webpack:///./src/images/rocket.png","webpack:///./src/images/tv.png","webpack:///./src/images/sofa.png","webpack:///./src/images/lamp.png","webpack:///./src/images/wood_tile.png","webpack:///./src/images/brick_tile.png","webpack:///./src/images/small_thruster.png","webpack:///./src/images/radial_thruster.png","webpack:///./src/images/background.png","webpack:///./src/images/goal.png","webpack:///./src/sounds/burn.wav","webpack:///./src/actors/furniture.ts","webpack:///./src/actors/thruster.ts","webpack:///./src/actors/ui/startbutton.ts","webpack:///./src/actors/goal.ts","webpack:///./src/levels/helplevel.ts","webpack:///./src/levels/winLevel.ts","webpack:///./src/actors/rocket.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","ex","Textures","Sword","Texture","SpeechBubble","Button","Panel","ArrowRight","ArrowLeft","Rocket","TV","Sofa","Lamp","WoodTile","BrickTile","SmallThruster","RadialThruster","Background","Goal","Levels","Level1","Level2","Level3","Level4","Level5","Level6","Level7","Done","Sounds","Burn","Sound","excalibur_1","tile_1","resources_1","furniture_1","thruster_1","startbutton_1","goal_1","Level","_super","levelData","engine","_this","this","isRunning","tiles","furniture","sound","__extends","onInitialize","width","canvasWidth","height","canvasHeight","background","Actor","pos","Vector","body","collider","type","CollisionType","PreventCollision","addDrawing","add","walls","forEach","wall","Tile","x","y","tile","startButton","StartButton","goal","scale","onActivate","reinitializeFurniture","isReset","onDeactivate","reset","loadFurniture","furnitureItem","Furniture","texture","boosters","boost","thruster","Thruster","attachment","offset","rotation","rotate","addThruster","remove","kill","endTimer","start","element","play","stop","completed","setTimeout","goToScene","next","update","delta","every","f","isInGoal","Scene","text","doneFn","flip","label","Label","color","Color","Black","textAlign","TextAlign","Center","fontSize","fontUnit","FontUnit","Px","spriteSheet","SpriteSheet","animation","getAnimationForAll","setTo","setParentPos","parentPos","setDrawing","flipHorizontal","clone","level_1","helplevel_1","winLevel_1","Game","displayMode","DisplayMode","Fixed","level","HelpLevel","WinLevel","loader","Engine","CollisionGroupManager","Physics","useRigidBodyPhysics","game","Loader","addResource","then","tileSet","DarkGray","friction","topLeft","getSprite","topMiddle","topRight","middleLeft","middle","middleRight","bottomLeft","bottomMiddle","bottomRight","group","groupByName","draw","ctx","startX","startY","endX","endY","gravity","thrusters","Active","mass","enableCapturePointer","onPostUpdate","torque","acc","Zero","getThrust","getTorque","child","inGoal","thrust","isDragging","emitterOffset","updateAttachment","placement","toAngle","Math","PI","flipVertical","on","input","pointers","primary","once","emitter","ParticleEmitter","emitterType","EmitterType","Circle","radius","minVel","maxVel","minAngle","maxAngle","emitRate","opacity","fadeFlag","particleLife","maxSize","minSize","beginColor","fromRGB","endColor","isEmitting","totalAngle","parent","cos","magnitude","vel","attachmentVector","lastPagePos","sub","normalize","tex","fontFamily","Orange","onClick","e","stopper","clearTimeout","UIActor","Passive","event","other","speechbubble_1","goalInfo","thrusterInfo","launchInfo","furnPos","rocket_1","positionGoal","dAttitude","Red","Yellow","speech","calculateAttitudeGoal","att","attitudeGoal","angularAbs","angle","adjustAttitude","canAdjust","rotatedOffset"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([4,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as ex from 'excalibur';\nimport { LevelData } from './levels/level';\n\nexport const Textures = {\n    Sword: new ex.Texture(require('./images/sword.png')),\n    SpeechBubble: new ex.Texture(require('./images/speech.png')),\n    Button: new ex.Texture(require('./images/button.png')),\n    Panel: new ex.Texture(require('./images/panel.png')),\n    ArrowRight: new ex.Texture(require('./images/arrow.png')),\n    ArrowLeft: new ex.Texture(require('./images/arrow2.png')),\n    Rocket: new ex.Texture(require('./images/rocket.png')),\n    TV: new ex.Texture(require('./images/tv.png')),\n    Sofa: new ex.Texture(require('./images/sofa.png')),\n    Lamp: new ex.Texture(require('./images/lamp.png')),\n    WoodTile: new ex.Texture(require('./images/wood_tile.png')),\n    BrickTile: new ex.Texture(require('./images/brick_tile.png')),\n    SmallThruster: new ex.Texture(require('./images/small_thruster.png')),\n    RadialThruster: new ex.Texture(require('./images/radial_thruster.png')),\n    Background:  new ex.Texture(require('./images/background.png')),\n    Goal:  new ex.Texture(require('./images/goal.png')),\n}\n\nexport const Levels:  {[key: string]: LevelData} = {\n    Level1: require('./levels/level1.json'),\n    Level2: require('./levels/level2.json'),\n    Level3: require('./levels/level3.json'),\n    Level4: require('./levels/level4.json'),\n    Level5: require('./levels/level5.json'),\n    Level6: require('./levels/level6.json'),\n    Level7: require('./levels/level7.json'),\n    Done: require('./levels/level8.json'),\n}\n\nexport const Sounds = {\n    Burn: new ex.Sound(require('./sounds/burn.wav')),\n}\n\n","import * as ex from 'excalibur';\nimport { Color, Actor, Vector, Timer, Sound, Engine } from 'excalibur';\nimport { Tile } from '../actors/tile';\nimport { Textures, Sounds } from '../resources';\nimport { Furniture } from '../actors/furniture';\nimport { Thruster, Attachment } from '../actors/thruster';\nimport { StartButton } from '../actors/ui/startbutton';\nimport { Startable } from '../actors/startable';\nimport { Goal } from '../actors/goal';\n\nexport interface LevelData{\n  walls: {\n    tile: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  }[];\n\n  furniture?: {\n    texture: string;\n    x: number;\n    y: number;\n    boosters: {\n      texture: string;\n      attachment: Attachment;\n      offset?: number;\n    }[];\n  }[];\n  \n  goal: {\n    x: number;\n    y: number;\n    scale: number;\n  }\n\n  next: string;\n}\n\nexport class Level extends ex.Scene implements Startable{\n  isRunning: boolean = false;\n\n  private tiles: Tile[] = [];\n  protected furniture: Furniture[] = [];\n  protected goal: Goal;\n  protected startButton: StartButton;\n  private sound: Sound;\n\n  constructor(public levelData: LevelData, engine: Engine) {\n    super(engine);\n    this.sound = Sounds.Burn;\n  }\n  \n  public onInitialize(engine: ex.Engine) {\n    const width = engine.canvasWidth;\n    const height = engine.canvasHeight;\n    \n    const background = new Actor({\n      pos: new Vector(width/2, height/2)\n    });\n    background.body.collider.type = ex.CollisionType.PreventCollision\n    background.addDrawing(Textures.Background);\n    this.add(background);\n\n    // dynamic objects\n    this.levelData.walls.forEach(wall => {\n      const t = new Tile(wall.x*50, wall.y*50, wall.width*50, wall.height*50, Textures[wall.tile]);\n      this.tiles.push(t);\n      this.add(t);\n    });\n\n    // this.loadFurniture();\n\n    // UI\n    this.startButton = new StartButton(this);\n    this.add(this.startButton);\n    this.goal = new Goal(this.levelData.goal.x*50, this.levelData.goal.y*50, new Vector(this.levelData.goal.scale, this.levelData.goal.scale));\n    this.add(this.goal);\n  }\n\n  public onActivate() {\n    this.reinitializeFurniture();\n    this.isRunning = false;\n    this.startButton.isReset = true;\n    this.startButton.isRunning = false;\n  }\n\n  public onDeactivate() {\n    this.isRunning = false;\n    this.startButton.reset();\n  }\n\n  loadFurniture(){\n    this.levelData.furniture.forEach(furnitureItem => {\n      const t = new Furniture(furnitureItem.x*50, furnitureItem.y*50, Textures[furnitureItem.texture]);\n      this.furniture.push(t);\n      furnitureItem.boosters.forEach(boost => {\n        const thruster = new Thruster(Textures[boost.texture], boost.attachment);\n        if (boost.offset) {\n          thruster.rotation = boost.offset;\n          thruster.pos = thruster.pos.rotate(boost.offset);\n        }\n        t.addThruster(thruster);\n      });\n      this.add(t);\n    });\n  }\n\n  reinitializeFurniture(){\n    this.furniture.forEach((furnitureItem) => {\n      this.remove(furnitureItem);\n      furnitureItem.kill();\n    });\n    this.furniture = [];\n    this.loadFurniture();\n    this.endTimer = undefined;\n  }\n  \n  start(): void {\n    this.furniture.forEach(element => element.start()); \n    this.isRunning = true;\n    this.sound.play();\n  }\n\n  stop(): void {\n    this.furniture.forEach(element => element.stop());\n    this.isRunning = false; \n    this.sound.stop();\n  }\n\n  private endTimer: Timer;\n\n  completed(engine){\n    setTimeout(() => {\n      engine.goToScene(this.levelData.next);\n    }, 1500);\n  }\n\n  update(engine, delta){\n    super.update(engine, delta)\n    if (!this.endTimer && this.furniture.every(f => f.isInGoal)){\n      \n      this.completed(engine);\n    }\n  }\n}\n","import * as ex from 'excalibur';\nimport { Textures } from '../resources';\nimport { Vector, SpriteSheet, Engine } from 'excalibur';\n\nexport class SpeechBubble extends ex.Actor {\n\n  private offset: Vector;\n  private label: ex.Label;\n  private animation: ex.Animation;\n  private parentPos: Vector;\n\n  constructor(text: string, private doneFn?: () => void, public flip: boolean = false) {\n    super();\n    \n    this.body.collider.type = ex.CollisionType.PreventCollision;\n    \n    this.label = new ex.Label(text, 0, 0, 'Arial');\n    // properties\n    this.label.color = ex.Color.Black;\n    this.label.textAlign = ex.TextAlign.Center;\n    this.label.fontSize = 40;\n    this.label.fontUnit = ex.FontUnit.Px; // pixels are the default\n    this.add(this.label);\n    \n  }   \n  set text(text: string) {\n    this.label.text = text;\n  }\n  get text() {\n    return this.label.text;\n  }\n\n  onInitialize(engine: Engine) {\n    const spriteSheet = new SpriteSheet(Textures.SpeechBubble, 1, 1, Textures.SpeechBubble.width, Textures.SpeechBubble.height);\n    this.animation = spriteSheet.getAnimationForAll(engine, 125);\n    \n    this.addDrawing('idle', this.animation);\n    this.height = Textures.SpeechBubble.height;\n    this.width = Textures.SpeechBubble.width;\n    this.animation.scale.setTo(0.4, 0.3);\n    //this.z = 100;\n    this.scale.setTo(0.4, 0.3);\n\n    if (this.doneFn){\n      setTimeout(() => {\n        this.doneFn();\n        this.kill();\n      }, 5000);\n    }\n  }\n\n  setParentPos(parentPos: Vector) {\n      this.parentPos = parentPos;\n  }\n\n  public update(engine: ex.Engine, delta: number) {\n    super.update(engine, delta);\n    this.setDrawing('idle');\n    this.animation.flipHorizontal = this.flip;\n    if (this.flip) {\n        this.offset = new Vector(-this.width/2, this.height / -2);\n    } else{\n        this.offset = new Vector(this.width/2, this.height / -2);\n    }\n    this.pos = this.parentPos.clone().add(this.offset);\n  }\n}\n","import * as ex from 'excalibur';\nimport { Level } from './levels/level';\nimport { Textures, Levels, Sounds } from './resources';\nimport { Physics } from 'excalibur';\nimport { HelpLevel } from './levels/helplevel';\nimport { WinLevel } from './levels/winLevel';\n\nclass Game extends ex.Engine {\n  constructor() {\n    super({ width: 1200, height: 800, displayMode: ex.DisplayMode.Fixed });\n    for (let key in Levels) {\n      let value = Levels[key];\n      if (key === \"Level1\") {\n        const level = new HelpLevel(value, this);\n        this.add(key, level);\n      } else if (key === \"Done\") {\n        const level = new WinLevel(value, this);\n        this.add(key, level);\n      } else {\n        const level = new Level(value, this);\n        this.add(key, level);\n      }\n    }\n  }\n  \n  public start(loader: ex.Loader) {\n    return super.start(loader);\n  }\n}\n\nex.CollisionGroupManager.create(\"furniture\");\nex.CollisionGroupManager.create(\"walls\");\n\nPhysics.useRigidBodyPhysics();/*\nPhysics.collisionResolutionStrategy = CollisionResolutionStrategy.RigidBody;\nPhysics.enabled = true;\nPhysics.allowRigidBodyRotation = true;*/\nconst game = new Game();\n\nlet loader = new ex.Loader();\n//loader.logo = require('./images/title.png');\nfor (let key in Textures) {\n  loader.addResource(Textures[key]);\n}\nfor (let key in Sounds) {\n  loader.addResource(Sounds[key]);\n}\n\ngame.start(loader).then(() => {\n  game.goToScene('Level1');\n});","import * as ex from 'excalibur';\nimport { Color, SpriteSheet } from 'excalibur';\nexport class Tile extends ex.Actor {\n\n    topLeft: ex.Sprite;\n    topMiddle: ex.Sprite;\n    topRight: ex.Sprite;\n    middleLeft: ex.Sprite;\n    middle: ex.Sprite;\n    middleRight: ex.Sprite;\n    bottomLeft: ex.Sprite;\n    bottomMiddle: ex.Sprite;\n    bottomRight: ex.Sprite;\n\n    constructor(x, y, width, height, public tileSet: ex.Texture) {\n        super(x, y, width, height, Color.DarkGray);\n\n        this.body.collider.friction = 1;\n        this.body.collider.type = ex.CollisionType.Fixed;\n        const spriteSheet = new SpriteSheet(this.tileSet, 3, 3, 50, 50);\n        this.topLeft = spriteSheet.getSprite(0);\n        this.topMiddle = spriteSheet.getSprite(1);\n        this.topRight = spriteSheet.getSprite(2);\n\n        this.middleLeft = spriteSheet.getSprite(3);\n        this.middle = spriteSheet.getSprite(4);\n        this.middleRight = spriteSheet.getSprite(5);\n        \n        this.bottomLeft = spriteSheet.getSprite(6);\n        this.bottomMiddle = spriteSheet.getSprite(7);\n        this.bottomRight = spriteSheet.getSprite(8);\n\n        this.body.collider.group = ex.CollisionGroupManager.groupByName(\"walls\");\n    }\n\n    draw(ctx: CanvasRenderingContext2D, delta: number){\n        const startX = this.pos.x + this.width/-2;\n        const startY = this.pos.y + this.height/-2;\n        const endX = this.pos.x + this.width/2;\n        const endY = this.pos.y + this.height/2;\n        for (let x = startX; x < endX; x += 50) {\n            for (let y = startY; y < endY; y += 50) {\n                let sprite: ex.Sprite;\n                if (y === startY) {\n                    if (x === startX) {\n                        sprite = this.topLeft;\n                    } else if (x >= endX-50) {\n                        sprite = this.topRight;\n                    } else {\n                        sprite = this.topMiddle;\n                    }\n                } else if (y >= endY-50) {\n                    if (x === startX) {\n                        sprite = this.bottomLeft;\n                    } else if (x >= endX-50) {\n                        sprite = this.bottomRight;\n                    } else {\n                        sprite = this.bottomMiddle;\n                    }\n                } else {\n                    if (x === startX) {\n                        sprite = this.middleLeft;\n                    } else if (x >= endX-50) {\n                        sprite = this.middleRight;\n                    } else {\n                        sprite = this.middle;\n                    }\n                }\n                sprite.draw(ctx, x, y);\n            }\n        }\n    }\n}","module.exports = __webpack_public_path__ + \"94754f62e0ae4d23d386e246f5e0cb6e.png\";","module.exports = __webpack_public_path__ + \"76fe2fe86a2023c6feb474400b68b94a.png\";","module.exports = __webpack_public_path__ + \"3ea5e186b643048c752aaa1edd750eb3.png\";","module.exports = __webpack_public_path__ + \"1e9685280b55383803c4817ab517672e.png\";","module.exports = __webpack_public_path__ + \"2385186871491075e0762c210949c9eb.png\";","module.exports = __webpack_public_path__ + \"fb7505dcfc9d54fd52b0844e6da988ec.png\";","module.exports = __webpack_public_path__ + \"8c79f8c71bb7cb95cc506668217deaf2.png\";","module.exports = __webpack_public_path__ + \"bf34c1237c916cd80b5c32c7c293c416.png\";","module.exports = __webpack_public_path__ + \"9806376f3a930e97ad533761548d452c.png\";","module.exports = __webpack_public_path__ + \"f9ab6fe1ec0e33eb363098eba1a84b54.png\";","module.exports = __webpack_public_path__ + \"cb46cb082cd78ed7b0fbfa505c7e1f8c.png\";","module.exports = __webpack_public_path__ + \"06608a725ce9ebc2887b58f1414c0316.png\";","module.exports = __webpack_public_path__ + \"9e0101f93b00123d7827621590de6015.png\";","module.exports = __webpack_public_path__ + \"b40f9ed65d85846c635606d82eba9fc5.png\";","module.exports = __webpack_public_path__ + \"34cd666ca694089b9f395b3aaf8f4a97.png\";","module.exports = __webpack_public_path__ + \"c7f1e54ea98d593cadf6029fc7cb97eb.png\";","module.exports = __webpack_public_path__ + \"9fe815e3ba21422f09fcdd3ea58c8f0e.wav\";","import * as ex from 'excalibur';\nimport { Vector } from 'excalibur';\nimport { Startable } from './startable';\nimport { Thruster } from './thruster';\n\nexport class Furniture extends ex.Actor implements Startable {\n  isRunning: boolean;\n \n  readonly gravity = new Vector(0, 80);\n  thrusters: Thruster[] = [];\n  isInGoal: boolean = false;\n  \n  constructor(x: number, y: number, texture: ex.Texture) {\n    super(x, y, texture.width * 0.8, texture.height * 0.8);\n    this.addDrawing(texture);\n    this.body.collider.type = ex.CollisionType.Active;\n  }\n\n  onInitialize(engine: ex.Engine) {\n    this.color = new ex.Color(255, 255, 255);\n    this.body.collider.friction = 1;\n    this.body.collider.mass = 1;\n    this.enableCapturePointer = false;\n    // this.body.collider.group = ex.CollisionGroupManager.groupByName(\"furniture\");\n  }\n  \n  onPostUpdate(engine: ex.Engine, delta: number) {\n    super.onPostUpdate(engine, delta);\n    this.body.torque = 0;\n    this.body.acc = Vector.Zero;\n  }\n\n  public update(engine: ex.Engine, delta: number) {\n    super.update(engine, delta);\n    this.acc = this.gravity.clone();\n    if (this.isRunning) {\n      this.thrusters.forEach(thruster => {\n        this.body.acc = this.body.acc.add(thruster.getThrust());\n        this.body.torque += thruster.getTorque();\n      });\n      //console.log(this.acc, this.torque);\n    }\n  }\n  \n  addThruster(thruster: Thruster){\n    this.add(thruster);\n    this.thrusters.push(thruster);\n  }\n\n  start(): void {\n    this.isRunning = true;\n    this.thrusters.forEach((child:any) => {\n      child.start()\n    });\n    this.isInGoal = false;\n  }\n  stop(): void {\n    this.isRunning = false;\n    this.thrusters.forEach((child:any) => {\n      if(child.isRunning){\n        child.stop()\n      }\n    });\n  }\n\n  inGoal(){\n    if (!this.isInGoal) {\n      this.isInGoal = true;\n      setTimeout(() => {\n        this.stop();\n        this.kill();\n        \n      }, 1000);\n      \n    }\n  }\n}\n","import * as ex from 'excalibur';\nimport { Vector, SpriteSheet } from 'excalibur';\nimport { Startable } from './startable';\n\nexport type Attachment = 'linear' | 'radial_clockwise' | 'radial_counterClockwise';\nconst MAX_ATTACHMENT_RADIUS = 70;\n\nexport class Thruster extends ex.Actor implements Startable {\n\n  private emitter: ex.ParticleEmitter;\n  readonly emitterOffset;\n  readonly thrust = new Vector(-150, 0);\n\n  public isRunning: boolean = false;\n  private isDragging: boolean = false;\n\n  constructor(private texture: ex.Texture, private attachment: Attachment = 'linear') {\n    super(50, 0, texture.width, texture.height);\n    \n    this.body.collider.type = ex.CollisionType.Active;\n    \n    switch (this.attachment) {\n      case 'linear': {\n        this.emitterOffset = new Vector(10, 0);\n        break;\n      }\n      case 'radial_clockwise': {\n        this.emitterOffset = new Vector(25, -5);\n        break;\n      }\n      case 'radial_counterClockwise': {\n        this.emitterOffset = new Vector(25, 5);\n        break;\n      }\n    }\n  }\n\n  updateAttachment(placement: Vector) {\n    this.pos = placement.clone();\n    switch (this.attachment) {\n      case 'linear': {\n        this.rotation = this.pos.toAngle();\n        break;\n      }\n      case 'radial_clockwise': {\n        this.rotation = this.pos.toAngle() + Math.PI/2;\n        break;\n      }\n      case 'radial_counterClockwise': {\n        this.rotation = this.pos.toAngle() - Math.PI/2;\n        break;\n      }\n    }\n    // console.log('placement radius', placement.magnitude());\n    // console.log(this.pos, this.width, this.height);\n  }\n\n  onInitialize(engine: ex.Engine) {\n    const spriteSheet = new SpriteSheet(this.texture, 1, 1, this.texture.width, this.texture.height);\n    const animation = spriteSheet.getAnimationForAll(engine, 125);\n    \n    this.addDrawing('idle', animation);\n    animation.flipVertical = this.attachment === 'radial_counterClockwise';\n\n    this.enableCapturePointer = true;\n    this.on('pointerdown', () => {\n      this.isDragging = true;\n      engine.input.pointers.primary.once('down', () => {\n        //console.log('once down');\n        this.isDragging = false;\n      });\n    });\n\n    this.emitter = new ex.ParticleEmitter({\n      emitterType: ex.EmitterType.Circle, // Shape of emitter nozzle\n      radius: 5,\n      minVel: 100,\n      maxVel: 400,\n      minAngle: 0.3 * Math.PI,\n      maxAngle: 0.7 * Math.PI,\n      emitRate: 300, // 300 particles/second\n      opacity: 0.5,\n      fadeFlag: true, // fade particles overtime\n      particleLife: 1000, // in milliseconds = 1 sec\n      maxSize: 10, // in pixels\n      minSize: 1,\n      beginColor: ex.Color.fromRGB(255, 100, 50),\n      endColor: ex.Color.fromRGB(240, 240, 0)\n    });\n\n    // set emitter settings\n    this.emitter.isEmitting = false;  // should the emitter be emitting\n    // add the emitter as a child actor, it will draw on top of the parent actor\n    // and move with the parent\n    engine.add(this.emitter);\n  }\n\n  public start(){\n    this.isRunning = true;\n    this.emitter.isEmitting = true;\n  }\n\n  public stop() {\n    this.isRunning = false;\n    this.emitter.isEmitting = false;\n  }\n\n  totalAngle(): number {\n    return this.rotation + this.parent.rotation;\n  }\n\n  public getThrust(): Vector {\n    return this.thrust.clone().rotate(this.totalAngle());\n  }\n\n  public getTorque(): number {\n    switch (this.attachment) {\n      case 'linear': {\n        return Math.cos(this.totalAngle()) * -100;\n      }\n      case 'radial_clockwise': {\n        return this.getThrust().magnitude() * this.pos.magnitude() * -1;\n      }\n      case 'radial_counterClockwise': {\n        return this.getThrust().magnitude() * this.pos.magnitude();\n      }\n    }\n    \n  }\n\n  public update(engine: ex.Engine, delta: number) {\n    super.update(engine, delta);\n    // console.log(this.isDragging);\n    \n    /*if (engine.input.pointers.primary.lastWorldPos) {\n      console.log(engine.input.pointers.primary.isActorUnderPointer(this));\n    }*/\n\n    if (this.isRunning) {\n      \n      // keep emitter pointing correctly\n      const offset = this.emitterOffset.rotate(this.rotation).add(this.pos).rotate(this.parent.rotation);\n      this.emitter.pos = this.parent.pos.clone().add(offset);\n      this.emitter.rotation = this.totalAngle();\n      this.emitter.minAngle = this.emitter.rotation - 0.2;\n      this.emitter.maxAngle = this.emitter.rotation + 0.2;\n      this.emitter.vel = this.vel;\n    } else if (this.isDragging){\n      \n      if (engine.input.pointers.primary.isDragging) {\n        const mouse = engine.input.pointers.primary.lastPagePos;\n        const center = mouse.add(new Vector(this.width/-2, this.height/-2));\n        let attachmentVector = center.sub(this.parent.pos);\n        if (attachmentVector.magnitude() > MAX_ATTACHMENT_RADIUS) {\n          attachmentVector = attachmentVector.normalize().scale(MAX_ATTACHMENT_RADIUS);\n        }\n        this.updateAttachment(attachmentVector);\n      } else {\n        /*engine.input.pointers.primary.update();\n        this.isDragging = false;\n        console.log('! engine.isDragging');*/\n      }\n    }\n  }\n}\n","import * as ex from 'excalibur';\nimport { UIActor, Vector } from 'excalibur';\nimport { Level } from '../../levels/level';\nimport { Startable } from '../startable';\nimport { Textures } from '../../resources';\n\nexport class StartButton extends UIActor implements Startable{\n  isRunning: boolean = false;\n  isReset: boolean = true;\n  label: ex.Label;\n    \n  constructor(private level: Level){\n    super({pos: new Vector(1025, 625)});\n    const tex = Textures.Button;\n    this.addDrawing(tex);\n    this.width = tex.width;\n    this.height = tex.height;\n        \n    this.label = new ex.Label({\n      pos: new Vector(tex.width/2, tex.height * 0.55),\n      text: 'Ignition!',\n      fontFamily: 'Arial',\n      fontSize: 20,\n      textAlign: ex.TextAlign.Center,\n      color: ex.Color.Orange\n    });\n    this.add(this.label);\n\n    this.on('pointerdown', this.onClick);\n  }\n\n  onClick(e: ex.Input.PointerEvent){\n    if (this.isRunning) {\n      this.stop();\n    } else {\n        if (this.isReset){\n            this.start();\n        } else {\n            this.reset();\n        }\n    }\n  }\n\n\n  private stopper;\n  start(): void {\n    this.isRunning = true;\n    this.isReset = false;\n    this.label.text = 'Cut engines';\n    this.level.start();\n    this.stopper = setTimeout(() => this.stop(), 5500);\n  }\n\n  stop(): void {\n    if (this.stopper) {\n      clearTimeout(this.stopper);\n    }\n    this.stopper = undefined;\n    this.isRunning = false;\n    this.label.text = 'Reset level';\n    this.level.stop();\n  }\n\n  reset(){\n    this.isReset = true;\n    this.label.text = 'Ignition!';\n    this.level.reinitializeFurniture();\n  }\n}","import * as ex from 'excalibur';\nimport { Textures } from '../resources';\nimport { Vector } from 'excalibur';\n\nexport class Goal extends ex.Actor {\n    constructor(x: number, y: number, scale: ex.Vector) {\n        super({\n            pos: new Vector(x, y),\n            scale,\n        });\n        this.body.collider.type = ex.CollisionType.Passive\n        const tex = Textures.Goal;\n        this.addDrawing(tex);\n        this.body.collider.group = ex.CollisionGroupManager.groupByName(\"furniture\");\n        this.width = tex.width/2;\n        this.height = tex.height/2;\n    }\n\n    onInitialize(engine: ex.Engine) {\n        this.on('collisionstart', (event: ex.CollisionStartEvent) => {\n            const other = event.other as any;\n            if (other.inGoal) {\n                other.inGoal();\n            }\n        });\n    }\n}","import * as ex from 'excalibur';\nimport { Startable } from '../actors/startable';\nimport { LevelData, Level } from './level';\nimport { SpeechBubble } from '../actors/speechbubble';\nimport { Engine } from 'excalibur';\n\nexport class HelpLevel extends Level implements Startable{\n\n  constructor(public levelData: LevelData, engine: Engine) {\n    super(levelData, engine);\n  }\n  \n  public onInitialize(engine: ex.Engine) {\n    super.onInitialize(engine);\n    \n  }\n\n  public onActivate() {\n    super.onActivate();\n\n    const goalInfo = new SpeechBubble(\"move furniture here\", () => {\n      const thrusterInfo = new SpeechBubble(\"Drag to orient\", () => {\n        const launchInfo = new SpeechBubble(\"Click to launch\", () => {}, true);\n        launchInfo.setParentPos(this.startButton.pos);\n        this.add(launchInfo);\n      });\n      const furnPos = this.furniture[0].pos;\n      thrusterInfo.setParentPos(this.furniture[0].thrusters[0].pos.add(furnPos));\n      this.add(thrusterInfo);\n    });\n    goalInfo.setParentPos(this.goal.pos);\n    this.add(goalInfo);\n  }\n\n  completed(engine){\n    const goalInfo = new SpeechBubble(\"well done!\", () => {});\n    goalInfo.setParentPos(this.goal.pos);\n    this.add(goalInfo);\n    super.completed(engine);\n  }\n}\n","import * as ex from 'excalibur';\nimport { Startable } from '../actors/startable';\nimport { LevelData, Level } from './level';\nimport { SpeechBubble } from '../actors/speechbubble';\nimport { Engine } from 'excalibur';\nimport { Rocket } from '../actors/rocket';\n\n\nexport class WinLevel extends Level implements Startable{\n\n  constructor(public levelData: LevelData, engine: Engine) {\n    super(levelData, engine);\n  }\n  \n  public onInitialize(engine: ex.Engine) {\n    super.onInitialize(engine);\n    \n    this.add(new Rocket())\n  }\n\n  public onActivate() {\n    super.onActivate();\n\n  }\n\n  completed(engine){\n    const goalInfo = new SpeechBubble(\"well done!\");\n    goalInfo.setParentPos(this.goal.pos);\n    this.add(goalInfo);\n  }\n}\n","import * as ex from 'excalibur';\nimport { Textures } from '../resources';\nimport { Line, Vector } from 'excalibur';\nimport { SpeechBubble } from './speechbubble';\n\nexport class Rocket extends ex.Actor {\n\n  emitter: ex.ParticleEmitter;\n  speech: SpeechBubble;\n  readonly emitterOffset = new Vector(50, 0);\n  positionGoal: Vector = new Vector(200, 200);\n  attitudeGoal: number;\n\n  readonly dAttitude = 0.003;\n  readonly thrust = new Vector(-150, 0);\n  readonly gravity = new Vector(0, 80);\n\n  constructor() {\n    super(100, 100, 110, 50);\n    this.scale.setTo(0.3, 0.3);\n    this.addDrawing(Textures.Rocket);\n    this.body.collider.type = ex.CollisionType.Active;\n  }\n\n  onInitialize(engine: ex.Engine) {\n    this.enableCapturePointer = true;\n    this.pos.x = 150;\n    this.pos.y = 150;\n    this.color = new ex.Color(255, 255, 255);\n    this.friction = 1;\n    this.mass = 1;\n\n    this.emitter = new ex.ParticleEmitter({\n      emitterType: ex.EmitterType.Circle, // Shape of emitter nozzle\n      radius: 5,\n      minVel: 100,\n      maxVel: 400,\n      minAngle: 0.3 * Math.PI,\n      maxAngle: 0.7 * Math.PI,\n      emitRate: 300, // 300 particles/second\n      opacity: 0.5,\n      fadeFlag: true, // fade particles overtime\n      particleLife: 1000, // in milliseconds = 1 sec\n      maxSize: 10, // in pixels\n      minSize: 1,\n      beginColor: ex.Color.Red,\n      endColor: ex.Color.Yellow\n    });\n\n    // set emitter settings\n    this.emitter.isEmitting = true;  // should the emitter be emitting\n    // add the emitter as a child actor, it will draw on top of the parent actor\n    // and move with the parent\n    engine.add(this.emitter);\n\n    this.speech = new SpeechBubble('You win!', () => {});\n    engine.add(this.speech);\n  }\n\n  private calculateAttitudeGoal(){\n    const att = this.pos.clone().add(this.positionGoal.clone().scale(-1));\n    this.attitudeGoal = att.toAngle();\n  }\n\n  private angularAbs(angle: number): number {\n    while (angle < 0) {\n      angle += Math.PI * 2;\n    }\n    while (angle > Math.PI * 2) {\n      angle -= Math.PI * 2;\n    }\n    return angle;\n  }\n\n  private adjustAttitude(delta: number) {\n    const canAdjust = this.dAttitude * delta;\n    if (this.angularAbs(this.rotation - this.attitudeGoal) < canAdjust) {\n      this.rotation = this.attitudeGoal;\n    } else if (this.angularAbs(this.attitudeGoal - this.rotation) < Math.PI) {\n      this.rotation += canAdjust;\n    } else {\n      this.rotation -= canAdjust;\n    }\n  }\n\n  public update(engine: ex.Engine, delta: number) {\n    super.update(engine, delta);\n    if (engine.input.pointers.primary.isDragging) {\n      this.positionGoal = engine.input.pointers.primary.lastPagePos;\n    }\n    this.calculateAttitudeGoal();\n    this.adjustAttitude(delta);\n    this.acc = this.thrust.clone().rotate(this.rotation).add(this.gravity);\n    this.rotation = this.rotation;\n\n    // keep emitter pointing right\n    const rotatedOffset = this.emitterOffset.clone().rotate(this.rotation);\n    this.emitter.pos = this.pos.clone().add(rotatedOffset);\n    this.emitter.rotation = this.rotation;\n    this.emitter.minAngle = this.rotation - 0.2;\n    this.emitter.maxAngle = this.rotation + 0.2;\n    this.emitter.vel = this.vel;\n\n    // keep speech in right place\n    if (this.pos) {\n      this.speech.setParentPos(this.pos);\n      this.speech.flip = this.pos.x > 1000;\n      //const attitudeDeg = this.angularAbs(this.rotation) * 180/Math.PI;\n      //this.speech.text = `Attitude: ${attitudeDeg.toFixed(2)}°`;\n    }\n  }\n}"],"sourceRoot":""}