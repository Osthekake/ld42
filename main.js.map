{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/resources.ts","webpack:///./src/actors/speechbubble.ts","webpack:///./src/levels/level.ts","webpack:///./src/actors/rocket.ts","webpack:///./src/levels/winLevel.ts","webpack:///./src/levels/helplevel.ts","webpack:///./src/actors/goal.ts","webpack:///./src/actors/ui/startbutton.ts","webpack:///./src/util/util.ts","webpack:///./src/actors/thruster.ts","webpack:///./src/actors/furniture.ts","webpack:///./src/sounds/burn.wav","webpack:///./src/images/goal.png","webpack:///./src/images/background.png","webpack:///./src/images/radial_thruster.png","webpack:///./src/images/small_thruster.png","webpack:///./src/images/brick_tile.png","webpack:///./src/images/wood_tile.png","webpack:///./src/images/lamp.png","webpack:///./src/images/sofa.png","webpack:///./src/images/tv.png","webpack:///./src/images/rocket.png","webpack:///./src/images/arrow2.png","webpack:///./src/images/arrow.png","webpack:///./src/images/panel.png","webpack:///./src/images/button.png","webpack:///./src/images/speech.png","webpack:///./src/images/sword.png","webpack:///./src/actors/tile.ts","webpack:///./src/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","p","jsonpArray","window","webpackJsonp","oldJsonpFunction","bind","slice","ex","Textures","Sword","Texture","SpeechBubble","Button","Panel","ArrowRight","ArrowLeft","Rocket","TV","Sofa","Lamp","WoodTile","BrickTile","SmallThruster","RadialThruster","Background","Goal","Levels","Level1","Level2","Level3","Level4","Level5","Level6","Level7","Done","Sounds","Burn","Sound","t","e","this","__extends","setPrototypeOf","__proto__","Array","constructor","create","resources_1","excalibur_1","_super","text","doneFn","flip","_this","collisionType","CollisionType","PreventCollision","label","Label","color","Color","Black","textAlign","TextAlign","Center","fontSize","fontUnit","FontUnit","Px","add","onInitialize","engine","spriteSheet","SpriteSheet","animation","getAnimationForAll","addDrawing","setHeight","height","setWidth","width","scale","setTo","setTimeout","kill","setParentPos","parentPos","update","delta","setDrawing","flipHorizontal","offset","Vector","getWidth","getHeight","pos","clone","Actor","tile_1","furniture_1","thruster_1","startbutton_1","goal_1","Level","levelData","isRunning","tiles","furniture","sound","canvasWidth","canvasHeight","background","x","y","walls","forEach","wall","Tile","tile","startButton","StartButton","goal","onActivate","reinitializeFurniture","isReset","onDeactivate","reset","loadFurniture","furnitureItem","Furniture","texture","boosters","boost","thruster","Thruster","attachment","rotation","rotate","addThruster","remove","endTimer","start","element","play","stop","completed","goToScene","next","every","f","isInGoal","Scene","speechbubble_1","emitterOffset","positionGoal","dAttitude","thrust","gravity","Active","enableCapturePointer","friction","mass","emitter","ParticleEmitter","emitterType","EmitterType","Circle","radius","minVel","maxVel","minAngle","Math","PI","maxAngle","emitRate","opacity","fadeFlag","particleLife","maxSize","minSize","beginColor","Red","endColor","Yellow","isEmitting","speech","calculateAttitudeGoal","att","attitudeGoal","toAngle","angularAbs","angle","adjustAttitude","canAdjust","input","pointers","primary","isDragging","lastPagePos","acc","rotatedOffset","vel","level_1","rocket_1","WinLevel","goalInfo","HelpLevel","thrusterInfo","launchInfo","furnPos","thrusters","Passive","tex","addCollisionGroup","on","event","other","inGoal","level","fontFamily","Orange","onClick","stopper","clearTimeout","UIActor","vectorDifference","a","b","dX","dY","util_1","updateAttachment","placement","flipVertical","once","fromRGB","totalAngle","parent","getThrust","getTorque","cos","magnitude","center","attachmentVector","normalize","onPostUpdate","torque","Zero","child","tileSet","DarkGray","Fixed","topLeft","getSprite","topMiddle","topRight","middleLeft","middle","middleRight","bottomLeft","bottomMiddle","bottomRight","draw","ctx","startX","startY","endX","endY","helplevel_1","winLevel_1","Game","displayMode","DisplayMode","key","loader","Engine","Physics","useRigidBodyPhysics","game","Loader","addResource","then"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([38,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as ex from 'excalibur';\nimport { LevelData } from './levels/level';\n\nexport const Textures = {\n    Sword: new ex.Texture(require('./images/sword.png')),\n    SpeechBubble: new ex.Texture(require('./images/speech.png')),\n    Button: new ex.Texture(require('./images/button.png')),\n    Panel: new ex.Texture(require('./images/panel.png')),\n    ArrowRight: new ex.Texture(require('./images/arrow.png')),\n    ArrowLeft: new ex.Texture(require('./images/arrow2.png')),\n    Rocket: new ex.Texture(require('./images/rocket.png')),\n    TV: new ex.Texture(require('./images/tv.png')),\n    Sofa: new ex.Texture(require('./images/sofa.png')),\n    Lamp: new ex.Texture(require('./images/lamp.png')),\n    WoodTile: new ex.Texture(require('./images/wood_tile.png')),\n    BrickTile: new ex.Texture(require('./images/brick_tile.png')),\n    SmallThruster: new ex.Texture(require('./images/small_thruster.png')),\n    RadialThruster: new ex.Texture(require('./images/radial_thruster.png')),\n    Background:  new ex.Texture(require('./images/background.png')),\n    Goal:  new ex.Texture(require('./images/goal.png')),\n}\n\nexport const Levels:  {[key: string]: LevelData} = {\n    Level1: require('./levels/level1.json'),\n    Level2: require('./levels/level2.json'),\n    Level3: require('./levels/level3.json'),\n    Level4: require('./levels/level4.json'),\n    Level5: require('./levels/level5.json'),\n    Level6: require('./levels/level6.json'),\n    Level7: require('./levels/level7.json'),\n    Done: require('./levels/level8.json'),\n}\n\nexport const Sounds = {\n    Burn: new ex.Sound(require('./sounds/burn.wav')),\n}\n\n","import * as ex from 'excalibur';\nimport { Textures } from '../resources';\nimport { Vector, SpriteSheet, Engine } from 'excalibur';\n\nexport class SpeechBubble extends ex.Actor {\n\n  private offset: Vector;\n  private label: ex.Label;\n  private animation: ex.Animation;\n  private parentPos: Vector;\n\n  constructor(text: string, private doneFn?: () => void, public flip: boolean = false) {\n    super();\n    \n    this.collisionType = ex.CollisionType.PreventCollision;\n    \n    this.label = new ex.Label(text, 0, 0, 'Arial');\n    // properties\n    this.label.color = ex.Color.Black;\n    this.label.textAlign = ex.TextAlign.Center;\n    this.label.fontSize = 40;\n    this.label.fontUnit = ex.FontUnit.Px; // pixels are the default\n    this.add(this.label);\n    \n  }   \n  set text(text: string) {\n    this.label.text = text;\n  }\n  get text() {\n    return this.label.text;\n  }\n\n  onInitialize(engine: Engine) {\n    const spriteSheet = new SpriteSheet(Textures.SpeechBubble, 1, 1, 1263, 903);\n    this.animation = spriteSheet.getAnimationForAll(engine, 125);\n    \n    this.addDrawing('idle', this.animation);\n    this.setHeight(Textures.SpeechBubble.height);\n    this.setWidth(Textures.SpeechBubble.width);\n    this.animation.scale.setTo(0.4, 0.3);\n    //this.z = 100;\n    this.scale.setTo(0.4, 0.3);\n\n    if (this.doneFn){\n      setTimeout(() => {\n        this.doneFn();\n        this.kill();\n      }, 5000);\n    }\n  }\n\n  setParentPos(parentPos: Vector) {\n      this.parentPos = parentPos;\n  }\n\n  public update(engine: ex.Engine, delta: number) {\n    super.update(engine, delta);\n    this.setDrawing('idle');\n    this.animation.flipHorizontal = this.flip;\n    if (this.flip) {\n        this.offset = new Vector(-this.getWidth()/2, this.getHeight() / -2);\n    } else{\n        this.offset = new Vector(this.getWidth()/2, this.getHeight() / -2);\n    }\n    this.pos = this.parentPos.clone().add(this.offset);\n  }\n}\n","import * as ex from 'excalibur';\nimport { Color, Actor, Vector, Timer, Sound } from 'excalibur';\nimport { Tile } from '../actors/tile';\nimport { Textures, Sounds } from '../resources';\nimport { Furniture } from '../actors/furniture';\nimport { Thruster, Attachment } from '../actors/thruster';\nimport { StartButton } from '../actors/ui/startbutton';\nimport { Startable } from '../actors/startable';\nimport { Goal } from '../actors/goal';\n\nexport interface LevelData{\n  walls: {\n    tile: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  }[];\n\n  furniture?: {\n    texture: string;\n    x: number;\n    y: number;\n    boosters: {\n      texture: string;\n      attachment: Attachment;\n      offset?: number;\n    }[];\n  }[];\n  \n  goal: {\n    x: number;\n    y: number;\n    scale: number;\n  }\n\n  next: string;\n}\n\nexport class Level extends ex.Scene implements Startable{\n  isRunning: boolean = false;\n\n  private tiles: Tile[] = [];\n  protected furniture: Furniture[] = [];\n  protected goal: Goal;\n  protected startButton: StartButton;\n  private sound: Sound;\n\n  constructor(public levelData: LevelData) {\n    super();\n    this.sound = Sounds.Burn;\n  }\n  \n  public onInitialize(engine: ex.Engine) {\n    const width = engine.canvasWidth;\n    const height = engine.canvasHeight;\n    \n    const background = new Actor({\n      x: width/2,\n      y: height/2,\n      collisionType: ex.CollisionType.PreventCollision\n    });\n    background.addDrawing(Textures.Background);\n    this.add(background);\n\n    // dynamic objects\n    this.levelData.walls.forEach(wall => {\n      const t = new Tile(wall.x*50, wall.y*50, wall.width*50, wall.height*50, Textures[wall.tile]);\n      this.tiles.push(t);\n      this.add(t);\n    });\n\n    // this.loadFurniture();\n\n    // UI\n    this.startButton = new StartButton(this);\n    this.add(this.startButton);\n    this.goal = new Goal(this.levelData.goal.x*50, this.levelData.goal.y*50, new Vector(this.levelData.goal.scale, this.levelData.goal.scale));\n    this.add(this.goal);\n  }\n\n  public onActivate() {\n    this.reinitializeFurniture();\n    this.isRunning = false;\n    this.startButton.isReset = true;\n    this.startButton.isRunning = false;\n  }\n\n  public onDeactivate() {\n    this.isRunning = false;\n    this.startButton.reset();\n  }\n\n  loadFurniture(){\n    this.levelData.furniture.forEach(furnitureItem => {\n      const t = new Furniture(furnitureItem.x*50, furnitureItem.y*50, Textures[furnitureItem.texture]);\n      this.furniture.push(t);\n      furnitureItem.boosters.forEach(boost => {\n        const thruster = new Thruster(Textures[boost.texture], boost.attachment);\n        if (boost.offset) {\n          thruster.rotation = boost.offset;\n          thruster.pos = thruster.pos.rotate(boost.offset);\n        }\n        t.addThruster(thruster);\n      });\n      this.add(t);\n    });\n  }\n\n  reinitializeFurniture(){\n    this.furniture.forEach((furnitureItem) => {\n      this.remove(furnitureItem);\n      furnitureItem.kill();\n    });\n    this.furniture = [];\n    this.loadFurniture();\n    this.endTimer = undefined;\n  }\n  \n  start(): void {\n    this.furniture.forEach(element => element.start()); \n    this.isRunning = true;\n    this.sound.play();\n  }\n\n  stop(): void {\n    this.furniture.forEach(element => element.stop());\n    this.isRunning = false; \n    this.sound.stop();\n  }\n\n  private endTimer: Timer;\n\n  completed(engine){\n    setTimeout(() => {\n      engine.goToScene(this.levelData.next);\n    }, 1500);\n  }\n\n  update(engine, delta){\n    super.update(engine, delta)\n    if (!this.endTimer && this.furniture.every(f => f.isInGoal)){\n      \n      this.completed(engine);\n    }\n  }\n}\n","import * as ex from 'excalibur';\nimport { Textures } from '../resources';\nimport { Line, Vector } from 'excalibur';\nimport { SpeechBubble } from './speechbubble';\n\nexport class Rocket extends ex.Actor {\n\n  emitter: ex.ParticleEmitter;\n  speech: SpeechBubble;\n  readonly emitterOffset = new Vector(50, 0);\n  positionGoal: Vector = new Vector(200, 200);\n  attitudeGoal: number;\n\n  readonly dAttitude = 0.003;\n  readonly thrust = new Vector(-150, 0);\n  readonly gravity = new Vector(0, 80);\n\n  constructor() {\n    super(100, 100, 110, 50);\n    this.scale.setTo(0.3, 0.3);\n    this.addDrawing(Textures.Rocket);\n    this.collisionType = ex.CollisionType.Active;\n  }\n\n  onInitialize(engine: ex.Engine) {\n    this.enableCapturePointer = true;\n    this.pos.x = 150;\n    this.pos.y = 150;\n    this.color = new ex.Color(255, 255, 255);\n    this.friction = 1;\n    this.mass = 1;\n\n    this.emitter = new ex.ParticleEmitter({\n      emitterType: ex.EmitterType.Circle, // Shape of emitter nozzle\n      radius: 5,\n      minVel: 100,\n      maxVel: 400,\n      minAngle: 0.3 * Math.PI,\n      maxAngle: 0.7 * Math.PI,\n      emitRate: 300, // 300 particles/second\n      opacity: 0.5,\n      fadeFlag: true, // fade particles overtime\n      particleLife: 1000, // in milliseconds = 1 sec\n      maxSize: 10, // in pixels\n      minSize: 1,\n      beginColor: ex.Color.Red,\n      endColor: ex.Color.Yellow\n    });\n\n    // set emitter settings\n    this.emitter.isEmitting = true;  // should the emitter be emitting\n    // add the emitter as a child actor, it will draw on top of the parent actor\n    // and move with the parent\n    engine.add(this.emitter);\n\n    this.speech = new SpeechBubble('You win!', () => {});\n    engine.add(this.speech);\n  }\n\n  private calculateAttitudeGoal(){\n    const att = this.pos.clone().add(this.positionGoal.clone().scale(-1));\n    this.attitudeGoal = att.toAngle();\n  }\n\n  private angularAbs(angle: number): number {\n    while (angle < 0) {\n      angle += Math.PI * 2;\n    }\n    while (angle > Math.PI * 2) {\n      angle -= Math.PI * 2;\n    }\n    return angle;\n  }\n\n  private adjustAttitude(delta: number) {\n    const canAdjust = this.dAttitude * delta;\n    if (this.angularAbs(this.rotation - this.attitudeGoal) < canAdjust) {\n      this.rotation = this.attitudeGoal;\n    } else if (this.angularAbs(this.attitudeGoal - this.rotation) < Math.PI) {\n      this.rotation += canAdjust;\n    } else {\n      this.rotation -= canAdjust;\n    }\n  }\n\n  public update(engine: ex.Engine, delta: number) {\n    super.update(engine, delta);\n    if (engine.input.pointers.primary.isDragging) {\n      this.positionGoal = engine.input.pointers.primary.lastPagePos;\n    }\n    this.calculateAttitudeGoal();\n    this.adjustAttitude(delta);\n    this.acc = this.thrust.clone().rotate(this.rotation).add(this.gravity);\n    this.rotation = this.rotation;\n\n    // keep emitter pointing right\n    const rotatedOffset = this.emitterOffset.clone().rotate(this.rotation);\n    this.emitter.pos = this.pos.clone().add(rotatedOffset);\n    this.emitter.rotation = this.rotation;\n    this.emitter.minAngle = this.rotation - 0.2;\n    this.emitter.maxAngle = this.rotation + 0.2;\n    this.emitter.vel = this.vel;\n\n    // keep speech in right place\n    if (this.pos) {\n      this.speech.setParentPos(this.pos);\n      this.speech.flip = this.pos.x > 1000;\n      //const attitudeDeg = this.angularAbs(this.rotation) * 180/Math.PI;\n      //this.speech.text = `Attitude: ${attitudeDeg.toFixed(2)}°`;\n    }\n  }\n}","import * as ex from 'excalibur';\nimport { Startable } from '../actors/startable';\nimport { LevelData, Level } from './level';\nimport { SpeechBubble } from '../actors/speechbubble';\nimport { Vector } from 'excalibur';\nimport { Rocket } from '../actors/rocket';\n\n\nexport class WinLevel extends Level implements Startable{\n\n  constructor(public levelData: LevelData) {\n    super(levelData);\n  }\n  \n  public onInitialize(engine: ex.Engine) {\n    super.onInitialize(engine);\n    \n    this.add(new Rocket())\n  }\n\n  public onActivate() {\n    super.onActivate();\n\n  }\n\n\n  completed(engine){\n    const goalInfo = new SpeechBubble(\"well done!\");\n    goalInfo.setParentPos(this.goal.pos);\n    this.add(goalInfo);\n  }\n}\n","import * as ex from 'excalibur';\nimport { Startable } from '../actors/startable';\nimport { LevelData, Level } from './level';\nimport { SpeechBubble } from '../actors/speechbubble';\nimport { Vector } from 'excalibur';\n\n\nexport class HelpLevel extends Level implements Startable{\n\n  constructor(public levelData: LevelData) {\n    super(levelData);\n  }\n  \n  public onInitialize(engine: ex.Engine) {\n    super.onInitialize(engine);\n    \n  }\n\n  public onActivate() {\n    super.onActivate();\n\n    const goalInfo = new SpeechBubble(\"move furniture here\", () => {\n      const thrusterInfo = new SpeechBubble(\"Drag to orient\", () => {\n        const launchInfo = new SpeechBubble(\"Click to launch\", () => {}, true);\n        launchInfo.setParentPos(this.startButton.pos);\n        this.add(launchInfo);\n      });\n      const furnPos = this.furniture[0].pos;\n      thrusterInfo.setParentPos(this.furniture[0].thrusters[0].pos.add(furnPos));\n      this.add(thrusterInfo);\n    });\n    goalInfo.setParentPos(this.goal.pos);\n    this.add(goalInfo);\n  }\n\n  completed(engine){\n    const goalInfo = new SpeechBubble(\"well done!\", () => {});\n    goalInfo.setParentPos(this.goal.pos);\n    this.add(goalInfo);\n    super.completed(engine);\n  }\n}\n","import * as ex from 'excalibur';\nimport { Textures } from '../resources';\n\nexport class Goal extends ex.Actor {\n    constructor(x: number, y: number, scale: ex.Vector) {\n        super({\n            x, y, scale,\n            collisionType: ex.CollisionType.Passive,\n        });\n        const tex = Textures.Goal;\n        this.addDrawing(tex);\n        this.addCollisionGroup('furniture');\n        this.setWidth(tex.width/2);\n        this.setHeight(tex.height/2);\n    }\n\n    onInitialize(engine: ex.Engine) {\n        this.on('collisionstart', (event: ex.CollisionStartEvent) => {\n            const other = event.other as any;\n            if (other.inGoal) {\n                other.inGoal();\n            }\n        });\n    }\n}","import * as ex from 'excalibur';\nimport { UIActor } from 'excalibur';\nimport { Level } from '../../levels/level';\nimport { Startable } from '../startable';\nimport { Textures } from '../../resources';\n\nexport class StartButton extends UIActor implements Startable{\n  isRunning: boolean = false;\n  isReset: boolean = true;\n  label: ex.Label;\n    \n  constructor(private level: Level){\n    super({\n      x: 1025,\n      y: 625,\n    });\n    const tex = Textures.Button;\n    this.addDrawing(tex);\n    this.setWidth(tex.width);\n    this.setHeight(tex.height);\n        \n    this.label = new ex.Label({\n      x: tex.width/2,\n      y: tex.height * 0.55,\n      text: 'Ignition!',\n      fontFamily: 'Arial',\n      fontSize: 20,\n      textAlign: ex.TextAlign.Center,\n      color: ex.Color.Orange\n    });\n    this.add(this.label);\n\n    this.on('pointerdown', this.onClick);\n  }\n\n  onClick(e: ex.Input.PointerEvent){\n    if (this.isRunning) {\n      this.stop();\n    } else {\n        if (this.isReset){\n            this.start();\n        } else {\n            this.reset();\n        }\n    }\n  }\n\n\n  private stopper;\n  start(): void {\n    this.isRunning = true;\n    this.isReset = false;\n    this.label.text = 'Cut engines';\n    this.level.start();\n    this.stopper = setTimeout(() => this.stop(), 5500);\n  }\n\n  stop(): void {\n    if (this.stopper) {\n      clearTimeout(this.stopper);\n    }\n    this.stopper = undefined;\n    this.isRunning = false;\n    this.label.text = 'Reset level';\n    this.level.stop();\n  }\n\n  reset(){\n    this.isReset = true;\n    this.label.text = 'Ignition!';\n    this.level.reinitializeFurniture();\n  }\n}","import { Vector } from \"excalibur\";\n\nexport function vectorDifference(a: Vector, b: Vector): Vector {\n    const dX = a.x - b.x;\n    const dY = a.y - b.y;\n    return new Vector(dX, dY);\n}","import * as ex from 'excalibur';\nimport { Vector, SpriteSheet } from 'excalibur';\nimport { vectorDifference } from '../util/util';\nimport { Startable } from './startable';\n\nexport type Attachment = 'linear' | 'radial_clockwise' | 'radial_counterClockwise';\nconst MAX_ATTACHMENT_RADIUS = 70;\n\nexport class Thruster extends ex.Actor implements Startable {\n\n  private emitter: ex.ParticleEmitter;\n  readonly emitterOffset;\n  readonly thrust = new Vector(-150, 0);\n\n  public isRunning: boolean = false;\n  private isDragging: boolean = false;\n\n  constructor(private texture: ex.Texture, private attachment: Attachment = 'linear') {\n    super(50, 0, texture.width, texture.height);\n    \n    this.collisionType = ex.CollisionType.Active;\n    \n    switch (this.attachment) {\n      case 'linear': {\n        this.emitterOffset = new Vector(10, 0);\n        break;\n      }\n      case 'radial_clockwise': {\n        this.emitterOffset = new Vector(25, -5);\n        break;\n      }\n      case 'radial_counterClockwise': {\n        this.emitterOffset = new Vector(25, 5);\n        break;\n      }\n    }\n  }\n\n  updateAttachment(placement: Vector) {\n    this.pos = placement.clone();\n    switch (this.attachment) {\n      case 'linear': {\n        this.rotation = this.pos.toAngle();\n        break;\n      }\n      case 'radial_clockwise': {\n        this.rotation = this.pos.toAngle() + Math.PI/2;\n        break;\n      }\n      case 'radial_counterClockwise': {\n        this.rotation = this.pos.toAngle() - Math.PI/2;\n        break;\n      }\n    }\n    // console.log('placement radius', placement.magnitude());\n    // console.log(this.pos, this.getWidth(), this.getHeight());\n  }\n\n  onInitialize(engine: ex.Engine) {\n    const spriteSheet = new SpriteSheet(this.texture, 1, 1, this.texture.width, this.texture.height);\n    const animation = spriteSheet.getAnimationForAll(engine, 125);\n    \n    this.addDrawing('idle', animation);\n    animation.flipVertical = this.attachment === 'radial_counterClockwise';\n\n    this.enableCapturePointer = true;\n    this.on('pointerdown', () => {\n      this.isDragging = true;\n      engine.input.pointers.primary.once('down', () => {\n        //console.log('once down');\n        this.isDragging = false;\n      });\n    });\n\n    this.emitter = new ex.ParticleEmitter({\n      emitterType: ex.EmitterType.Circle, // Shape of emitter nozzle\n      radius: 5,\n      minVel: 100,\n      maxVel: 400,\n      minAngle: 0.3 * Math.PI,\n      maxAngle: 0.7 * Math.PI,\n      emitRate: 300, // 300 particles/second\n      opacity: 0.5,\n      fadeFlag: true, // fade particles overtime\n      particleLife: 1000, // in milliseconds = 1 sec\n      maxSize: 10, // in pixels\n      minSize: 1,\n      beginColor: ex.Color.fromRGB(255, 100, 50),\n      endColor: ex.Color.fromRGB(240, 240, 0)\n    });\n\n    // set emitter settings\n    this.emitter.isEmitting = false;  // should the emitter be emitting\n    // add the emitter as a child actor, it will draw on top of the parent actor\n    // and move with the parent\n    engine.add(this.emitter);\n  }\n\n  public start(){\n    this.isRunning = true;\n    this.emitter.isEmitting = true;\n  }\n\n  public stop() {\n    this.isRunning = false;\n    this.emitter.isEmitting = false;\n  }\n\n  totalAngle(): number {\n    return this.rotation + this.parent.rotation;\n  }\n\n  public getThrust(): Vector {\n    return this.thrust.clone().rotate(this.totalAngle());\n  }\n\n  public getTorque(): number {\n    switch (this.attachment) {\n      case 'linear': {\n        return Math.cos(this.totalAngle()) * -100;\n      }\n      case 'radial_clockwise': {\n        return this.getThrust().magnitude() * this.pos.magnitude() * -1;\n      }\n      case 'radial_counterClockwise': {\n        return this.getThrust().magnitude() * this.pos.magnitude();\n      }\n    }\n    \n  }\n\n  public update(engine: ex.Engine, delta: number) {\n    super.update(engine, delta);\n    // console.log(this.isDragging);\n    \n    /*if (engine.input.pointers.primary.lastWorldPos) {\n      console.log(engine.input.pointers.primary.isActorUnderPointer(this));\n    }*/\n\n    if (this.isRunning) {\n      \n      // keep emitter pointing correctly\n      const offset = this.emitterOffset.rotate(this.rotation).add(this.pos).rotate(this.parent.rotation);\n      this.emitter.pos = this.parent.pos.clone().add(offset);\n      this.emitter.rotation = this.totalAngle();\n      this.emitter.minAngle = this.emitter.rotation - 0.2;\n      this.emitter.maxAngle = this.emitter.rotation + 0.2;\n      this.emitter.vel = this.vel;\n    } else if (this.isDragging){\n      \n      if (engine.input.pointers.primary.isDragging) {\n        const mouse = engine.input.pointers.primary.lastPagePos;\n        const center = mouse.add(new Vector(this.getWidth()/-2, this.getHeight()/-2));\n        let attachmentVector = vectorDifference(center, this.parent.pos);\n        if (attachmentVector.magnitude() > MAX_ATTACHMENT_RADIUS) {\n          attachmentVector = attachmentVector.normalize().scale(MAX_ATTACHMENT_RADIUS);\n        }\n        this.updateAttachment(attachmentVector);\n      } else {\n        /*engine.input.pointers.primary.update();\n        this.isDragging = false;\n        console.log('! engine.isDragging');*/\n      }\n    }\n  }\n}\n","import * as ex from 'excalibur';\nimport { Vector } from 'excalibur';\nimport { Startable } from './startable';\nimport { Thruster } from './thruster';\n\nexport class Furniture extends ex.Actor implements Startable {\n  isRunning: boolean;\n \n  readonly gravity = new Vector(0, 80);\n  thrusters: Thruster[] = [];\n  isInGoal: boolean = false;\n  \n  constructor(x: number, y: number, texture: ex.Texture) {\n    super(x, y, texture.width * 0.8, texture.height * 0.8);\n    this.addDrawing(texture);\n    this.collisionType = ex.CollisionType.Active;\n  }\n\n  onInitialize(engine: ex.Engine) {\n    this.color = new ex.Color(255, 255, 255);\n    this.friction = 1;\n    this.mass = 1;\n    this.enableCapturePointer = false;\n    this.addCollisionGroup('furniture');\n    this.addCollisionGroup('walls');\n  }\n  \n  onPostUpdate(engine: ex.Engine, delta: number) {\n    super.onPostUpdate(engine, delta);\n    this.torque = 0;\n    this.acc = Vector.Zero;\n  }\n\n  public update(engine: ex.Engine, delta: number) {\n    super.update(engine, delta);\n    this.acc = this.gravity.clone();\n    if (this.isRunning) {\n      this.thrusters.forEach(thruster => {\n        this.acc = this.acc.add(thruster.getThrust());\n        this.torque += thruster.getTorque();\n      });\n      //console.log(this.acc, this.torque);\n    }\n  }\n  \n  addThruster(thruster: Thruster){\n    this.add(thruster);\n    this.thrusters.push(thruster);\n  }\n\n  start(): void {\n    this.isRunning = true;\n    this.thrusters.forEach((child:any) => {\n      child.start()\n    });\n    this.isInGoal = false;\n  }\n  stop(): void {\n    this.isRunning = false;\n    this.thrusters.forEach((child:any) => {\n      if(child.isRunning){\n        child.stop()\n      }\n    });\n  }\n\n  inGoal(){\n    if (!this.isInGoal) {\n      this.isInGoal = true;\n      setTimeout(() => {\n        this.stop();\n        this.kill();\n        \n      }, 1000);\n      \n    }\n  }\n}\n","module.exports = __webpack_public_path__ + \"9fe815e3ba21422f09fcdd3ea58c8f0e.wav\";","module.exports = __webpack_public_path__ + \"c7f1e54ea98d593cadf6029fc7cb97eb.png\";","module.exports = __webpack_public_path__ + \"34cd666ca694089b9f395b3aaf8f4a97.png\";","module.exports = __webpack_public_path__ + \"b40f9ed65d85846c635606d82eba9fc5.png\";","module.exports = __webpack_public_path__ + \"9e0101f93b00123d7827621590de6015.png\";","module.exports = __webpack_public_path__ + \"06608a725ce9ebc2887b58f1414c0316.png\";","module.exports = __webpack_public_path__ + \"cb46cb082cd78ed7b0fbfa505c7e1f8c.png\";","module.exports = __webpack_public_path__ + \"f9ab6fe1ec0e33eb363098eba1a84b54.png\";","module.exports = __webpack_public_path__ + \"9806376f3a930e97ad533761548d452c.png\";","module.exports = __webpack_public_path__ + \"bf34c1237c916cd80b5c32c7c293c416.png\";","module.exports = __webpack_public_path__ + \"8c79f8c71bb7cb95cc506668217deaf2.png\";","module.exports = __webpack_public_path__ + \"fb7505dcfc9d54fd52b0844e6da988ec.png\";","module.exports = __webpack_public_path__ + \"2385186871491075e0762c210949c9eb.png\";","module.exports = __webpack_public_path__ + \"1e9685280b55383803c4817ab517672e.png\";","module.exports = __webpack_public_path__ + \"3ea5e186b643048c752aaa1edd750eb3.png\";","module.exports = __webpack_public_path__ + \"76fe2fe86a2023c6feb474400b68b94a.png\";","module.exports = __webpack_public_path__ + \"94754f62e0ae4d23d386e246f5e0cb6e.png\";","import * as ex from 'excalibur';\nimport { Color, Engine, SpriteSheet } from 'excalibur';\nimport { Textures } from '../resources';\n\nexport class Tile extends ex.Actor {\n\n    topLeft: ex.Sprite;\n    topMiddle: ex.Sprite;\n    topRight: ex.Sprite;\n    middleLeft: ex.Sprite;\n    middle: ex.Sprite;\n    middleRight: ex.Sprite;\n    bottomLeft: ex.Sprite;\n    bottomMiddle: ex.Sprite;\n    bottomRight: ex.Sprite;\n\n    constructor(x, y, private width, private height, private tileSet: ex.Texture) {\n        super(x, y, width, height, Color.DarkGray);\n\n        this.friction = 1;\n        this.collisionType = ex.CollisionType.Fixed;\n        const spriteSheet = new SpriteSheet(this.tileSet, 3, 3, 50, 50);\n        this.topLeft = spriteSheet.getSprite(0);\n        this.topMiddle = spriteSheet.getSprite(1);\n        this.topRight = spriteSheet.getSprite(2);\n\n        this.middleLeft = spriteSheet.getSprite(3);\n        this.middle = spriteSheet.getSprite(4);\n        this.middleRight = spriteSheet.getSprite(5);\n        \n        this.bottomLeft = spriteSheet.getSprite(6);\n        this.bottomMiddle = spriteSheet.getSprite(7);\n        this.bottomRight = spriteSheet.getSprite(8);\n\n        this.addCollisionGroup('walls');\n    }\n\n    draw(ctx: CanvasRenderingContext2D, delta: number){\n        const startX = this.pos.x + this.getWidth()/-2;\n        const startY = this.pos.y + this.getHeight()/-2;\n        const endX = this.pos.x + this.getWidth()/2;\n        const endY = this.pos.y + this.getHeight()/2;\n        for (let x = startX; x < endX; x += 50) {\n            for (let y = startY; y < endY; y += 50) {\n                let sprite: ex.Sprite;\n                if (y === startY) {\n                    if (x === startX) {\n                        sprite = this.topLeft;\n                    } else if (x >= endX-50) {\n                        sprite = this.topRight;\n                    } else {\n                        sprite = this.topMiddle;\n                    }\n                } else if (y >= endY-50) {\n                    if (x === startX) {\n                        sprite = this.bottomLeft;\n                    } else if (x >= endX-50) {\n                        sprite = this.bottomRight;\n                    } else {\n                        sprite = this.bottomMiddle;\n                    }\n                } else {\n                    if (x === startX) {\n                        sprite = this.middleLeft;\n                    } else if (x >= endX-50) {\n                        sprite = this.middleRight;\n                    } else {\n                        sprite = this.middle;\n                    }\n                }\n                sprite.draw(ctx, x, y);\n            }\n        }\n    }\n}","import * as ex from 'excalibur';\nimport { Level } from './levels/level';\nimport { Textures, Levels, Sounds } from './resources';\nimport { Physics, CollisionResolutionStrategy } from 'excalibur';\nimport { HelpLevel } from './levels/helplevel';\nimport { WinLevel } from './levels/winLevel';\n\nclass Game extends ex.Engine {\n  constructor() {\n    super({ width: 1200, height: 800, displayMode: ex.DisplayMode.Fixed });\n    for (let key in Levels) {\n      let value = Levels[key];\n      if (key === \"Level1\") {\n        const level = new HelpLevel(value);\n        this.add(key, level);\n      } else if (key === \"Done\") {\n        const level = new WinLevel(value);\n        this.add(key, level);\n      } else {\n        const level = new Level(value);\n        this.add(key, level);\n      }\n    }\n  }\n  \n  public start(loader: ex.Loader) {\n    return super.start(loader);\n  }\n}\n\nPhysics.useRigidBodyPhysics();/*\nPhysics.collisionResolutionStrategy = CollisionResolutionStrategy.RigidBody;\nPhysics.enabled = true;\nPhysics.allowRigidBodyRotation = true;*/\nconst game = new Game();\n\nlet loader = new ex.Loader();\n//loader.logo = require('./images/title.png');\nfor (let key in Textures) {\n  loader.addResource(Textures[key]);\n}\nfor (let key in Sounds) {\n  loader.addResource(Sounds[key]);\n}\n\ngame.start(loader).then(() => {\n  game.goToScene('Level1');\n});"],"sourceRoot":""}